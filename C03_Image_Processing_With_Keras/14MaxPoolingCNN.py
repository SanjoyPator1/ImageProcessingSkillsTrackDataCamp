
im = [[0.5764706 , 0.5882353 , 0.551634  , ..., 0.7058824 , 0.7529412 ,
        0.74509805],
       [0.32941177, 0.6026144 , 0.6183007 , ..., 0.7633987 , 0.7869281 ,
        0.74771243],
       [0.63529414, 0.5424837 , 0.6143791 , ..., 0.75816995, 0.67843133,
        0.6156863 ],
       ...,
       [0.11372549, 0.16209151, 0.08888889, ..., 0.19084968, 0.09673203,
        0.09411765],
       [0.24575163, 0.2640523 , 0.27058825, ..., 0.69803923, 0.52287585,
        0.4797386 ],
       [0.6130719 , 0.779085  , 0.6405229 , ..., 0.6026144 , 0.6143791 ,
        0.7411764 ]]


# Result placeholder
result = np.zeros((im.shape[0]//2, im.shape[1]//2))

# Pooling operation
for ii in range(result.shape[0]):
    for jj in range(result.shape[1]):
        result[ii, jj] = np.max(im[ii * 2 : ii * 2 + 2, jj * 2 : jj * 2 + 2])

